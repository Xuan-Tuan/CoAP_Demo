[1/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/coap_server_example_main.c.obj
[2/9] Linking C static library esp-idf\main\libmain.a
[3/9] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D E:\IOT\COAP\coap_server\build\bootloader\esp-idf\esptool_py && c:\Users\PC\ESP_IDF\python_env\idf5.0_py3.8_env\Scripts\python.exe C:/Users/PC/ESP_IDF/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 E:/IOT/COAP/coap_server/build/bootloader/bootloader.bin"
Bootloader binary size 0x6700 bytes. 0x900 bytes (8%) free.
[4/7] Generating ld/sections.ld
[5/7] Linking CXX executable coap_server.elf
[6/7] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32 image...
Merged 25 ELF sections
Successfully created esp32 image.
Generated E:/IOT/COAP/coap_server/build/coap_server.bin
[7/7] cmd.exe /C "cd /D E:\IOT\COAP\coap_server\build\esp-idf\esptool_py && c:\Users\PC\ESP_IDF\python_env\idf5.0_py3.8_env\Scripts\python.exe C:/Users/PC/ESP_IDF/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app E:/IOT/COAP/coap_server/build/partition_table/partition-table.bin E:/IOT/COAP/coap_server/build/coap_server.bin"
coap_server.bin binary size 0xe30d0 bytes. Smallest app partition is 0x100000 bytes. 0x1cf30 bytes (11%) free.
